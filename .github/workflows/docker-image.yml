name: Docker Build && Push Image

on:
  workflow_dispatch:
  release:
    types: [published] 
    
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  
  
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=true
          tags: |
            type=schedule,enable=true,priority=1000
    - name: Expose GitHub Runtime
      uses: crazy-max/ghaction-github-runtime@v2
    - name: Env
      run: |
          # ACTIONS_RUNTIME_TOKEN, ACTIONS_RUNTIME_URL should be exposed
          env|sort 
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
      with:
        version: latest
        driver: docker-container
        driver-opts: image=moby/buildkit:master
        buildkitd-flags: --debug
        config: .github/buildkitd.toml
        install: true
    - name: Inspect builder
      run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        push: false
        target: openjij-builder
        cache-from: type=gha
        cache-to: type=gha,mode=max
   
